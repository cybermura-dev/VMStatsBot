from aiogram import F, Router
from aiogram.types import CallbackQuery
from ..services.vm_service import VMService
from ..keyboards.keyboards import KeyboardManager

router = Router()
keyboards = KeyboardManager()

def truncate_log_text(text: str, max_length: int = 4096) -> str:
    """Truncate text to fit Telegram message limits"""
    if len(text) <= max_length:
        return text
    return text[:max_length-100] + "\n\n... (–ü–æ–∫–∞–∑–∞–Ω—ã —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è)"

@router.callback_query(F.data == "action_log")
async def show_logs(call: CallbackQuery):
    """Show event logs with proper length handling"""
    vm_service = VMService()
    vm_events = await vm_service.get_logs()
    
    if not vm_events:
        log_text = "üìú <b>–ñ—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π</b>\n\n–ù–µ—Ç –Ω–µ–¥–∞–≤–Ω–∏—Ö —Å–æ–±—ã—Ç–∏–π VM –≤ –∂—É—Ä–Ω–∞–ª–µ."
    else:
        events_text = f"<pre>{vm_events}</pre>"
        log_text = "üìú <b>–ñ—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π VM</b>\n\n" + truncate_log_text(events_text)
    
    await call.message.edit_text(
        log_text,
        reply_markup=keyboards.back_button(),
        parse_mode="HTML"
    ) 